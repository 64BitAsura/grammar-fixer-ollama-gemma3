openapi: 3.0.3
info:
  title: Grammar Fixer API
  description: |
    A production-ready API that uses Ollama with the Gemma3 model to fix grammar in text.
    The API returns structured JSON objects for each grammar change, detailing the location,
    original text, and corrected text.
  version: 1.0.0
  contact:
    name: Grammar Fixer Support
  license:
    name: ISC

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.grammar-fixer.example.com
    description: Production server

paths:
  /grammar/fix:
    post:
      summary: Fix grammar in text
      description: |
        Analyzes the provided text and returns an array of grammar corrections.
        Each correction includes the location (character positions), the original
        incorrect text, the corrected text, and an optional explanation.
      operationId: fixGrammar
      tags:
        - Grammar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GrammarFixRequest'
            examples:
              simple:
                summary: Simple grammar error
                value:
                  text: "She dont like apples"
              multiple:
                summary: Multiple grammar errors
                value:
                  text: "He go to school and she dont care"
              withOptions:
                summary: Request with custom options
                value:
                  text: "They was happy to see me"
                  options:
                    model: "gemma3"
                    host: "http://localhost:11434"
      responses:
        '200':
          description: Successful grammar analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrammarFixResponse'
              examples:
                singleCorrection:
                  summary: Single correction found
                  value:
                    corrections:
                      - location:
                          start: 4
                          end: 8
                        oldText: "dont"
                        newText: "doesn't"
                        explanation: "Incorrect contraction"
                multipleCorrections:
                  summary: Multiple corrections found
                  value:
                    corrections:
                      - location:
                          start: 3
                          end: 5
                        oldText: "go"
                        newText: "goes"
                        explanation: "Subject-verb agreement"
                      - location:
                          start: 24
                          end: 28
                        oldText: "dont"
                        newText: "doesn't"
                        explanation: "Incorrect contraction"
                noCorrections:
                  summary: No corrections needed
                  value:
                    corrections: []
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                missingText:
                  summary: Missing text field
                  value:
                    error: "Bad Request"
                    message: "Invalid input: text must be a non-empty string"
                    statusCode: 400
                emptyText:
                  summary: Empty text provided
                  value:
                    error: "Bad Request"
                    message: "Invalid input: text must be a non-empty string"
                    statusCode: 400
                invalidType:
                  summary: Invalid text type
                  value:
                    error: "Bad Request"
                    message: "Invalid input: text must be a non-empty string"
                    statusCode: 400
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ollamaConnection:
                  summary: Unable to connect to Ollama
                  value:
                    error: "Internal Server Error"
                    message: "Unable to connect to Ollama. Please ensure Ollama is running (ollama serve)"
                    statusCode: 500
                general:
                  summary: General server error
                  value:
                    error: "Internal Server Error"
                    message: "An unexpected error occurred while processing the request"
                    statusCode: 500

components:
  schemas:
    GrammarFixRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The text to analyze and correct for grammar errors
          minLength: 1
          example: "She dont like apples"
        options:
          type: object
          description: Optional configuration for the grammar fixer
          properties:
            model:
              type: string
              description: The Ollama model to use for grammar checking
              default: "gemma3"
              example: "gemma3"
            host:
              type: string
              description: The Ollama host URL
              default: "http://localhost:11434"
              format: uri
              example: "http://localhost:11434"

    GrammarFixResponse:
      type: object
      required:
        - corrections
      properties:
        corrections:
          type: array
          description: Array of grammar corrections found in the text
          items:
            $ref: '#/components/schemas/Correction'

    Correction:
      type: object
      required:
        - location
        - oldText
        - newText
      properties:
        location:
          type: object
          description: Character position of the error in the original text
          required:
            - start
            - end
          properties:
            start:
              type: integer
              description: Starting character position (0-indexed)
              minimum: 0
              example: 4
            end:
              type: integer
              description: Ending character position (exclusive)
              minimum: 0
              example: 8
        oldText:
          type: string
          description: The original incorrect text
          minLength: 1
          example: "dont"
        newText:
          type: string
          description: The corrected text
          minLength: 1
          example: "doesn't"
        explanation:
          type: string
          description: Brief explanation of the grammar error (optional)
          example: "Incorrect contraction"

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - statusCode
      properties:
        error:
          type: string
          description: Error type or category
          example: "Bad Request"
        message:
          type: string
          description: Detailed error message
          example: "Invalid input: text must be a non-empty string"
        statusCode:
          type: integer
          description: HTTP status code
          example: 400

tags:
  - name: Grammar
    description: Grammar checking and correction operations
